<% config.override = false %>
import { fastifyTRPCPlugin, FastifyTRPCPluginOptions } from '@trpc/server/adapters/fastify';
import fastify from 'fastify';
import { RootRouter, rootRouter } from '../router/router.js';
import { createContext } from '../router/router.utils.js';


const createServer = async () => {
  const server = fastify({
    maxParamLength: 10000,
    bodyLimit: 30 * 1024 * 1024,
    logger: {
      level: 'warn',
    },
  });

  server.get('/health', async (req) => {
    return { status: 'ok' };
  });

  server.register(fastifyTRPCPlugin, {
    prefix: '/trpc',
    trpcOptions: {
      router: rootRouter,
      createContext: await createContext({}),
      onError({ error }) {
        console.error(error);
      },
    } satisfies FastifyTRPCPluginOptions<RootRouter>['trpcOptions'],
  });

  server.addHook('onError', async (request, reply, error) => {
    console.error(error);
  });

  await server.ready();

  return server;
};

export { createServer };